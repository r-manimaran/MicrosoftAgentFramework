using Azure.AI.OpenAI;
using Microsoft.Agents.AI;
using Microsoft.Agents.AI.Workflows;
using Microsoft.Extensions.AI;
using OpenAI;
using OpenAI.Chat;
using SharedLib;
using System.Runtime.InteropServices;
using ChatMessage = Microsoft.Extensions.AI.ChatMessage;


AzureOpenAIClient client = new AzureOpenAIClient(new Uri(LLMConfig.Endpoint),
                        new System.ClientModel.ApiKeyCredential(LLMConfig.ApiKey));

ChatClient chatClient = client.GetChatClient(LLMConfig.DeploymentOrModelId);

string intentAgentInstructions = """
            You are an intent extraction agent. Read the user's input and identify their core intent. Responst strictly in the JsonFormat. \n
            { "intent":"[brief description of what the user wants to achieve]}
            This output will be passed directly to the Email Agent for composing an email.
            The output should be in JsonFormat.
 """;
AIAgent intentAgent = chatClient.CreateAIAgent(name: "IntentAgent", instructions: intentAgentInstructions);
      
string emailGenerationInstructions = """
            You are an Email Composer Agent. Your task is to generate a short, friendly and polite email based on the user's intent.
         { "intent":"Thank a friend and confirm attendance at a birthday party" }
         Compose a natural and human-sounding email reflectig this intent.
         Do not add greetings like 'Dear Assistant'. Only output the email body.
         This email will be set to the ToneAgent for review. 
 """;


AIAgent emailAgent = chatClient.CreateAIAgent(name: "EmailAgent", instructions: emailGenerationInstructions);

string toneAnalysisInstructions = """
                    You are a tone checker and Editor Agent.You will receive an email content generated by the Email Agent.
         Your job is to check if the tone is friendly and polite. If the tone is fine, respond with: The tone is friendly
         and polite. No changes is needed. If the tone can be improved, revise the email and return the corrected version
         prefixed with: Corrected Email: \n\n Only output the final result-no explanations.
 """;

AIAgent toneAgent = chatClient.CreateAIAgent(name: "ToneAgent", instructions: toneAnalysisInstructions);

Workflow workflow = AgentWorkflowBuilder.BuildSequential(intentAgent, emailAgent, toneAgent);


string input = "Thank a friend and confirm attendance at a birthday party";

var messages = new List<ChatMessage> { new(ChatRole.User, input) };

StreamingRun run = await InProcessExecution.StreamAsync(workflow, messages);

await run.TrySendMessageAsync(new TurnToken(emitEvents: true));

List<ChatMessage> result = new();

await foreach(WorkflowEvent evt in run.WatchStreamAsync().ConfigureAwait(false))
{
    if(evt is WorkflowOutputEvent completed)
    {
        result = (List<ChatMessage>)completed.Data!;
        break;
    }
}

foreach(ChatMessage message in result.Where(x=>x.Role != ChatRole.User))
{
    Console.WriteLine(message.AuthorName ?? "Unknown Author");
    Console.WriteLine($"{message.Text}\n");
    Console.WriteLine("--------------------------------------------------");
}